var Hashtable=function(){function n(t){var r;if(typeof t=="string"){return t}else if(typeof t.hashCode==e){r=t.hashCode();return typeof r=="string"?r:n(r)}else if(typeof t.toString==e){return t.toString()}else{try{return String(t)}catch(i){return Object.prototype.toString.call(t)}}}function r(e,t){return e.equals(t)}function i(t,n){return typeof n.equals==e?n.equals(t):t===n}function s(e){return function(t){if(t===null){throw new Error("null is not a valid "+e)}else if(typeof t=="undefined"){throw new Error(e+" must not be undefined")}}}function a(e,t,n,r){this[0]=e;this.entries=[];this.addEntry(t,n);if(r!==null){this.getEqualityFunction=function(){return r}}}function h(e){return function(t){var n=this.entries.length,r,i=this.getEqualityFunction(t);while(n--){r=this.entries[n];if(i(t,r[0])){switch(e){case f:return true;case l:return r;case c:return[n,r[1]]}}}return false}}function p(e){return function(t){var n=t.length;for(var r=0,i=this.entries.length;r<i;++r){t[n+r]=this.entries[r][e]}}}function d(e,t){var n=e.length,r;while(n--){r=e[n];if(t===r[0]){return n}}return null}function v(e,t){var n=e[t];return n&&n instanceof a?n:null}function m(r,i){var s=this;var f=[];var l={};var c=typeof r==e?r:n;var h=typeof i==e?i:null;this.put=function(e,t){o(e);u(t);var n=c(e),r,i,s=null;r=v(l,n);if(r){i=r.getEntryForKey(e);if(i){s=i[1];i[1]=t}else{r.addEntry(e,t)}}else{r=new a(n,e,t,h);f[f.length]=r;l[n]=r}return s};this.get=function(e){o(e);var t=c(e);var n=v(l,t);if(n){var r=n.getEntryForKey(e);if(r){return r[1]}}return null};this.containsKey=function(e){o(e);var t=c(e);var n=v(l,t);return n?n.containsKey(e):false};this.containsValue=function(e){u(e);var t=f.length;while(t--){if(f[t].containsValue(e)){return true}}return false};this.clear=function(){f.length=0;l={}};this.isEmpty=function(){return!f.length};var p=function(e){return function(){var t=[],n=f.length;while(n--){f[n][e](t)}return t}};this.keys=p("keys");this.values=p("values");this.entries=p("getEntries");this.remove=function(e){o(e);var n=c(e),r,i=null;var s=v(l,n);if(s){i=s.removeEntryForKey(e);if(i!==null){if(!s.entries.length){r=d(f,n);t(f,r);delete l[n]}}}return i};this.size=function(){var e=0,t=f.length;while(t--){e+=f[t].entries.length}return e};this.each=function(e){var t=s.entries(),n=t.length,r;while(n--){r=t[n];e(r[0],r[1])}};this.putAll=function(t,n){var r=t.entries();var i,o,u,a,f=r.length;var l=typeof n==e;while(f--){i=r[f];o=i[0];u=i[1];if(l&&(a=s.get(o))){u=n(o,a,u)}s.put(o,u)}};this.clone=function(){var e=new m(r,i);e.putAll(s);return e}}var e="function";var t=typeof Array.prototype.splice==e?function(e,t){e.splice(t,1)}:function(e,t){var n,r,i;if(t===e.length-1){e.length=t}else{n=e.slice(t+1);e.length=t;for(r=0,i=n.length;r<i;++r){e[t+r]=n[r]}}};var o=s("key"),u=s("value");var f=0,l=1,c=2;a.prototype={getEqualityFunction:function(t){return typeof t.equals==e?r:i},getEntryForKey:h(l),getEntryAndIndexForKey:h(c),removeEntryForKey:function(e){var n=this.getEntryAndIndexForKey(e);if(n){t(this.entries,n[0]);return n[1]}return null},addEntry:function(e,t){this.entries[this.entries.length]=[e,t]},keys:p(0),values:p(1),getEntries:function(e){var t=e.length;for(var n=0,r=this.entries.length;n<r;++n){e[t+n]=this.entries[n].slice(0)}},containsKey:h(f),containsValue:function(e){var t=this.entries.length;while(t--){if(e===this.entries[t][1]){return true}}return false}};return m}()
